name: Windows

on: 
  workflow_dispatch:
  push:
    branches: [ "master", "experimental" ]
  pull_request:
    branches: [ "master", "experimental" ]

env:
  BUILD_TYPE: Release

jobs:
  msvc_build:
    runs-on: windows-latest
    name: MSVC x64 Build
    steps:
      - uses: actions/checkout@v4

      - name: Create Build Environment
        shell: bash
        run: cmake -E make_directory "${{ runner.workspace }}/build"

      - name: Configure MSVC Build
        shell: bash
        working-directory: "${{ runner.workspace }}/build"
        run: cmake -A x64 -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} "${{ github.workspace }}"

      - name: Build with MSVC
        shell: pwsh
        working-directory: "${{ runner.workspace }}/build"
        run: |
          $threads = (Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors
          cmake --build . --config ${{ env.BUILD_TYPE }} --parallel $threads

  mingw_build:
    runs-on: windows-latest
    strategy:
      matrix:
        msys2_env: 
          - { msystem: 'MINGW64', toolchain: 'mingw-w64-x86_64-toolchain', cmake: 'mingw-w64-x86_64-cmake' }
          - { msystem: 'UCRT64', toolchain: 'mingw-w64-ucrt-x86_64-toolchain', cmake: 'mingw-w64-ucrt-x86_64-cmake' }
    name: MinGW x64 ${{ matrix.msys2_env.msystem }} Build
    steps:
      - uses: actions/checkout@v4

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msys2_env.msystem }}
          update: true
          install: ${{ matrix.msys2_env.toolchain }} ${{ matrix.msys2_env.cmake }}

      - name: Configure MinGW Build
        shell: msys2 {0}
        run: |
          cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} "${{ github.workspace }}"

      - name: Build with MinGW
        shell: msys2 {0}
        run: cmake --build . --config ${{ env.BUILD_TYPE }}

  clang_build:
    runs-on: windows-latest
    name: Clang x64 Build
    steps:
      - uses: actions/checkout@v4

      - name: Create Build Environment
        shell: bash
        run: cmake -E make_directory "${{ runner.workspace }}/build"

      - name: Configure Clang Build
        shell: bash
        working-directory: "${{ runner.workspace }}/build"
        run: |
          cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
                -DCMAKE_C_COMPILER=clang \
                -DCMAKE_CXX_COMPILER=clang++ \
                "${{ github.workspace }}"

      - name: Build with Clang
        shell: bash
        working-directory: "${{ runner.workspace }}/build"
        run: cmake --build . --config ${{ env.BUILD_TYPE }} --parallel

intel_build:
    runs-on: windows-latest
    name: Intel oneAPI Build (Standalone)
    steps:
      - uses: actions/checkout@v4

      - name: Download Intel oneAPI Compiler Runtime
        shell: pwsh
        run: |
          $url = "https://registrationcenter-download.intel.com/akdlm/IRC_NAS/e2308d8f-75aa-428f-a7de-dad2ae14469e/w_dpcpp_cpp_runtime_p_2025.0.0.1166.exe"
          $output = "${env:USERPROFILE}\Downloads\w_dpcpp_cpp_runtime_p_2025.0.0.1166.exe"
          Write-Host "Downloading Intel oneAPI Compiler Runtime from $url ..."
          Invoke-WebRequest -Uri $url -OutFile $output

      - name: Install Intel oneAPI Compiler Runtime
        shell: pwsh
        run: |
          $installer = "${env:USERPROFILE}\Downloads\w_dpcpp_cpp_runtime_p_2025.0.0.1166.exe"
          Write-Host "Installing Intel oneAPI Compiler Runtime..."
          Start-Process -FilePath $installer -ArgumentList "/quiet","/norestart" -Wait
          Write-Host "Installation completed."

      - name: Create Build Environment
        shell: bash
        run: cmake -E make_directory "${{ runner.workspace }}/build"

      - name: Configure Intel Build
        shell: bash
        working-directory: "${{ runner.workspace }}/build"
        run: |
          cmake -A x64 -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
                -DCMAKE_C_COMPILER="C:\Program Files (x86)\Intel\oneAPI\compiler\2025.0\windows\bin\icx.exe" \
                -DCMAKE_CXX_COMPILER="C:\Program Files (x86)\Intel\oneAPI\compiler\2025.0\windows\bin\icpx.exe" \
                "${{ github.workspace }}"

      - name: Build with Intel
        shell: pwsh
        working-directory: "${{ runner.workspace }}/build"
        run: |
          $threads = (Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors
          cmake --build . --config ${{ env.BUILD_TYPE }} --parallel $threads